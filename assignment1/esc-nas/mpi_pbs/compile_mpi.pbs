#!/bin/bash
#PBS -l nodes=1:ppn=1:r641
#PBS -l walltime=00:20:00
#PBS -V



module load gcc/5.3.0

cd esc-nas/NPB3.3.1/NPB3.3-MPI

compilers=("gnu_mpich_eth,1.2.7" "gnu_mpich2_eth,1.5" "intel_eth,1.6.3" "intel_mpich_eth,1.2.7" "intel_mpich2_eth,1.5" "intel_eth,1.8.2" "gnu_eth,1.8.2"  "gnu_eth,1.6.3")


for i in ${compilers[@]};
do
	IFS=',' read compiler version <<< "$i"

	rm bin/*

	if [[ $compiler = "intel_mpich_eth" ]];
	then
		echo "compiler 1"
		cp config/mpich.def config/make.def
		module load intel/mpich_eth/$version
		source /share/apps/intel/parallel_studio_xe_2019/compilers_and_libraries_2019/linux/bin/compilervars.sh intel64

	elif [[ $compiler = "gnu_mpich_eth" ]];
	then
		echo "compiler 2"
		cp config/mpich.def config/make.def
		module load gnu/mpich_eth/$version
	
	elif [[ $compiler = "gnu_mpich2_eth" ]];
	then
		echo "compiler 2"
		cp config/mpich.def config/make.def
		module load gnu/mpich2_eth/$version
	
	elif [[ $compiler = "intel_mpich2_eth" ]];
	then
		echo "compiler 2"
		cp config/mpich.def config/make.def
		module load intel/mpich2_eth/$version
		source /share/apps/intel/parallel_studio_xe_2019/compilers_and_libraries_2019/linux/bin/compilervars.sh intel64
	
	elif [[ $compiler = "intel_eth" ]];
	then
		echo "compiler 3"
		cp config/openmpi.def config/openmpi.def
		module load intel/openmpi_eth/$version
		source /share/apps/intel/parallel_studio_xe_2019/compilers_and_libraries_2019/linux/bin/compilervars.sh intel64
	elif [[ $compiler = "gnu_eth" ]]
	then
		echo "compiler 4"
		cp config/openmpi.def config/openmpi.def
		module load gnu/openmpi_eth/$version

	fi
	
	echo $compiler.$version

	rm -r $compiler.$version
	mkdir $compiler.$version

	make clean
	make suite
	mv bin/* $compiler.$version
done
