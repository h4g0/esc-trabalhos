/*
 * Generated by dtrace(8).
 */

#ifndef	_CPP_H
#define	_CPP_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#if _DTRACE_VERSION

#define	CPP_FINISH_COPY_TO_MAIN_ARRAY(arg0, arg1, arg2) \
	__dtrace_cpp___finish_copy_to_main_array(arg0, arg1, arg2)
#ifndef	__sparc
#define	CPP_FINISH_COPY_TO_MAIN_ARRAY_ENABLED() \
	__dtraceenabled_cpp___finish_copy_to_main_array()
#else
#define	CPP_FINISH_COPY_TO_MAIN_ARRAY_ENABLED() \
	__dtraceenabled_cpp___finish_copy_to_main_array(0)
#endif
#define	CPP_FINISH_PAR_RADIX(arg0, arg1, arg2) \
	__dtrace_cpp___finish_par_radix(arg0, arg1, arg2)
#ifndef	__sparc
#define	CPP_FINISH_PAR_RADIX_ENABLED() \
	__dtraceenabled_cpp___finish_par_radix()
#else
#define	CPP_FINISH_PAR_RADIX_ENABLED() \
	__dtraceenabled_cpp___finish_par_radix(0)
#endif
#define	CPP_FINISH_SEQ_RADIX(arg0, arg1, arg2) \
	__dtrace_cpp___finish_seq_radix(arg0, arg1, arg2)
#ifndef	__sparc
#define	CPP_FINISH_SEQ_RADIX_ENABLED() \
	__dtraceenabled_cpp___finish_seq_radix()
#else
#define	CPP_FINISH_SEQ_RADIX_ENABLED() \
	__dtraceenabled_cpp___finish_seq_radix(0)
#endif
#define	CPP_FINISH_SORTING_INTO_BUCKETS(arg0, arg1, arg2) \
	__dtrace_cpp___finish_sorting_into_buckets(arg0, arg1, arg2)
#ifndef	__sparc
#define	CPP_FINISH_SORTING_INTO_BUCKETS_ENABLED() \
	__dtraceenabled_cpp___finish_sorting_into_buckets()
#else
#define	CPP_FINISH_SORTING_INTO_BUCKETS_ENABLED() \
	__dtraceenabled_cpp___finish_sorting_into_buckets(0)
#endif
#define	CPP_FINISH_WORKLOAD_DISTRIBUTION(arg0, arg1, arg2) \
	__dtrace_cpp___finish_workload_distribution(arg0, arg1, arg2)
#ifndef	__sparc
#define	CPP_FINISH_WORKLOAD_DISTRIBUTION_ENABLED() \
	__dtraceenabled_cpp___finish_workload_distribution()
#else
#define	CPP_FINISH_WORKLOAD_DISTRIBUTION_ENABLED() \
	__dtraceenabled_cpp___finish_workload_distribution(0)
#endif
#define	CPP_START_COPY_TO_MAIN_ARRAY(arg0, arg1, arg2) \
	__dtrace_cpp___start_copy_to_main_array(arg0, arg1, arg2)
#ifndef	__sparc
#define	CPP_START_COPY_TO_MAIN_ARRAY_ENABLED() \
	__dtraceenabled_cpp___start_copy_to_main_array()
#else
#define	CPP_START_COPY_TO_MAIN_ARRAY_ENABLED() \
	__dtraceenabled_cpp___start_copy_to_main_array(0)
#endif
#define	CPP_START_PAR_RADIX(arg0, arg1, arg2) \
	__dtrace_cpp___start_par_radix(arg0, arg1, arg2)
#ifndef	__sparc
#define	CPP_START_PAR_RADIX_ENABLED() \
	__dtraceenabled_cpp___start_par_radix()
#else
#define	CPP_START_PAR_RADIX_ENABLED() \
	__dtraceenabled_cpp___start_par_radix(0)
#endif
#define	CPP_START_SEQ_RADIX(arg0, arg1, arg2) \
	__dtrace_cpp___start_seq_radix(arg0, arg1, arg2)
#ifndef	__sparc
#define	CPP_START_SEQ_RADIX_ENABLED() \
	__dtraceenabled_cpp___start_seq_radix()
#else
#define	CPP_START_SEQ_RADIX_ENABLED() \
	__dtraceenabled_cpp___start_seq_radix(0)
#endif
#define	CPP_START_SORTING_INTO_BUCKETS(arg0, arg1, arg2) \
	__dtrace_cpp___start_sorting_into_buckets(arg0, arg1, arg2)
#ifndef	__sparc
#define	CPP_START_SORTING_INTO_BUCKETS_ENABLED() \
	__dtraceenabled_cpp___start_sorting_into_buckets()
#else
#define	CPP_START_SORTING_INTO_BUCKETS_ENABLED() \
	__dtraceenabled_cpp___start_sorting_into_buckets(0)
#endif
#define	CPP_START_WORKLOAD_DISTRIBUTION(arg0, arg1, arg2) \
	__dtrace_cpp___start_workload_distribution(arg0, arg1, arg2)
#ifndef	__sparc
#define	CPP_START_WORKLOAD_DISTRIBUTION_ENABLED() \
	__dtraceenabled_cpp___start_workload_distribution()
#else
#define	CPP_START_WORKLOAD_DISTRIBUTION_ENABLED() \
	__dtraceenabled_cpp___start_workload_distribution(0)
#endif


extern void __dtrace_cpp___finish_copy_to_main_array(int, int, int);
#ifndef	__sparc
extern int __dtraceenabled_cpp___finish_copy_to_main_array(void);
#else
extern int __dtraceenabled_cpp___finish_copy_to_main_array(long);
#endif
extern void __dtrace_cpp___finish_par_radix(int, int, int);
#ifndef	__sparc
extern int __dtraceenabled_cpp___finish_par_radix(void);
#else
extern int __dtraceenabled_cpp___finish_par_radix(long);
#endif
extern void __dtrace_cpp___finish_seq_radix(int, int, int);
#ifndef	__sparc
extern int __dtraceenabled_cpp___finish_seq_radix(void);
#else
extern int __dtraceenabled_cpp___finish_seq_radix(long);
#endif
extern void __dtrace_cpp___finish_sorting_into_buckets(int, int, int);
#ifndef	__sparc
extern int __dtraceenabled_cpp___finish_sorting_into_buckets(void);
#else
extern int __dtraceenabled_cpp___finish_sorting_into_buckets(long);
#endif
extern void __dtrace_cpp___finish_workload_distribution(int, int, int);
#ifndef	__sparc
extern int __dtraceenabled_cpp___finish_workload_distribution(void);
#else
extern int __dtraceenabled_cpp___finish_workload_distribution(long);
#endif
extern void __dtrace_cpp___start_copy_to_main_array(int, int, int);
#ifndef	__sparc
extern int __dtraceenabled_cpp___start_copy_to_main_array(void);
#else
extern int __dtraceenabled_cpp___start_copy_to_main_array(long);
#endif
extern void __dtrace_cpp___start_par_radix(int, int, int);
#ifndef	__sparc
extern int __dtraceenabled_cpp___start_par_radix(void);
#else
extern int __dtraceenabled_cpp___start_par_radix(long);
#endif
extern void __dtrace_cpp___start_seq_radix(int, int, int);
#ifndef	__sparc
extern int __dtraceenabled_cpp___start_seq_radix(void);
#else
extern int __dtraceenabled_cpp___start_seq_radix(long);
#endif
extern void __dtrace_cpp___start_sorting_into_buckets(int, int, int);
#ifndef	__sparc
extern int __dtraceenabled_cpp___start_sorting_into_buckets(void);
#else
extern int __dtraceenabled_cpp___start_sorting_into_buckets(long);
#endif
extern void __dtrace_cpp___start_workload_distribution(int, int, int);
#ifndef	__sparc
extern int __dtraceenabled_cpp___start_workload_distribution(void);
#else
extern int __dtraceenabled_cpp___start_workload_distribution(long);
#endif

#else

#define	CPP_FINISH_COPY_TO_MAIN_ARRAY(arg0, arg1, arg2)
#define	CPP_FINISH_COPY_TO_MAIN_ARRAY_ENABLED() (0)
#define	CPP_FINISH_PAR_RADIX(arg0, arg1, arg2)
#define	CPP_FINISH_PAR_RADIX_ENABLED() (0)
#define	CPP_FINISH_SEQ_RADIX(arg0, arg1, arg2)
#define	CPP_FINISH_SEQ_RADIX_ENABLED() (0)
#define	CPP_FINISH_SORTING_INTO_BUCKETS(arg0, arg1, arg2)
#define	CPP_FINISH_SORTING_INTO_BUCKETS_ENABLED() (0)
#define	CPP_FINISH_WORKLOAD_DISTRIBUTION(arg0, arg1, arg2)
#define	CPP_FINISH_WORKLOAD_DISTRIBUTION_ENABLED() (0)
#define	CPP_START_COPY_TO_MAIN_ARRAY(arg0, arg1, arg2)
#define	CPP_START_COPY_TO_MAIN_ARRAY_ENABLED() (0)
#define	CPP_START_PAR_RADIX(arg0, arg1, arg2)
#define	CPP_START_PAR_RADIX_ENABLED() (0)
#define	CPP_START_SEQ_RADIX(arg0, arg1, arg2)
#define	CPP_START_SEQ_RADIX_ENABLED() (0)
#define	CPP_START_SORTING_INTO_BUCKETS(arg0, arg1, arg2)
#define	CPP_START_SORTING_INTO_BUCKETS_ENABLED() (0)
#define	CPP_START_WORKLOAD_DISTRIBUTION(arg0, arg1, arg2)
#define	CPP_START_WORKLOAD_DISTRIBUTION_ENABLED() (0)

#endif


#ifdef	__cplusplus
}
#endif

#endif	/* _CPP_H */
