<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>tick_program_event (1 samples, 0.11%)</title><rect x="613.0" y="341" width="1.3" height="15.0" fill="rgb(208,63,29)" rx="2" ry="2" />
<text  x="615.97" y="351.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.11%)</title><rect x="11.3" y="437" width="1.3" height="15.0" fill="rgb(216,159,33)" rx="2" ry="2" />
<text  x="14.30" y="447.5" ></text>
</g>
<g >
<title>ksoftirqd/0 (1 samples, 0.11%)</title><rect x="645.4" y="469" width="1.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="648.38" y="479.5" ></text>
</g>
<g >
<title>mx_watchdog_thread (1 samples, 0.11%)</title><rect x="648.0" y="437" width="1.3" height="15.0" fill="rgb(238,154,53)" rx="2" ry="2" />
<text  x="650.98" y="447.5" ></text>
</g>
<g >
<title>child_rip (1 samples, 0.11%)</title><rect x="646.7" y="453" width="1.3" height="15.0" fill="rgb(214,133,4)" rx="2" ry="2" />
<text  x="649.68" y="463.5" ></text>
</g>
<g >
<title>sched_clock_idle_wakeup_event (1 samples, 0.11%)</title><rect x="163.0" y="325" width="1.3" height="15.0" fill="rgb(229,50,14)" rx="2" ry="2" />
<text  x="166.01" y="335.5" ></text>
</g>
<g >
<title>group_sched_in (88 samples, 9.67%)</title><rect x="288.8" y="325" width="114.1" height="15.0" fill="rgb(216,112,8)" rx="2" ry="2" />
<text  x="291.79" y="335.5" >group_sched_in</text>
</g>
<g >
<title>__cpufreq_driver_getavg (1 samples, 0.11%)</title><rect x="644.1" y="389" width="1.3" height="15.0" fill="rgb(240,139,14)" rx="2" ry="2" />
<text  x="647.09" y="399.5" ></text>
</g>
<g >
<title>events/4 (1 samples, 0.11%)</title><rect x="11.3" y="469" width="1.3" height="15.0" fill="rgb(247,163,24)" rx="2" ry="2" />
<text  x="14.30" y="479.5" ></text>
</g>
<g >
<title>do_softirq (78 samples, 8.57%)</title><rect x="172.1" y="357" width="101.1" height="15.0" fill="rgb(226,228,53)" rx="2" ry="2" />
<text  x="175.09" y="367.5" >do_softirq</text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.44%)</title><rect x="1184.8" y="341" width="5.2" height="15.0" fill="rgb(226,171,32)" rx="2" ry="2" />
<text  x="1187.81" y="351.5" ></text>
</g>
<g >
<title>update_vsyscall (10 samples, 1.10%)</title><rect x="93.0" y="277" width="13.0" height="15.0" fill="rgb(217,167,1)" rx="2" ry="2" />
<text  x="95.99" y="287.5" ></text>
</g>
<g >
<title>find_next_bit (1 samples, 0.11%)</title><rect x="646.7" y="357" width="1.3" height="15.0" fill="rgb(254,178,23)" rx="2" ry="2" />
<text  x="649.68" y="367.5" ></text>
</g>
<g >
<title>find_next_bit (7 samples, 0.77%)</title><rect x="260.3" y="229" width="9.0" height="15.0" fill="rgb(212,127,8)" rx="2" ry="2" />
<text  x="263.26" y="239.5" ></text>
</g>
<g >
<title>rpcauth_marshcred (1 samples, 0.11%)</title><rect x="1183.5" y="69" width="1.3" height="15.0" fill="rgb(228,130,33)" rx="2" ry="2" />
<text  x="1186.52" y="79.5" ></text>
</g>
<g >
<title>x86_pmu_disable (2 samples, 0.22%)</title><rect x="138.4" y="261" width="2.6" height="15.0" fill="rgb(214,48,52)" rx="2" ry="2" />
<text  x="141.37" y="271.5" ></text>
</g>
<g >
<title>ksoftirqd (1 samples, 0.11%)</title><rect x="645.4" y="421" width="1.3" height="15.0" fill="rgb(250,36,52)" rx="2" ry="2" />
<text  x="648.38" y="431.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.22%)</title><rect x="144.9" y="261" width="2.6" height="15.0" fill="rgb(222,211,18)" rx="2" ry="2" />
<text  x="147.86" y="271.5" ></text>
</g>
<g >
<title>calc_global_load (1 samples, 0.11%)</title><rect x="73.5" y="293" width="1.3" height="15.0" fill="rgb(240,64,37)" rx="2" ry="2" />
<text  x="76.54" y="303.5" ></text>
</g>
<g >
<title>getnstimeofday (1 samples, 0.11%)</title><rect x="585.7" y="373" width="1.3" height="15.0" fill="rgb(245,178,22)" rx="2" ry="2" />
<text  x="588.74" y="383.5" ></text>
</g>
<g >
<title>rcu_needs_cpu (1 samples, 0.11%)</title><rect x="287.5" y="341" width="1.3" height="15.0" fill="rgb(208,11,16)" rx="2" ry="2" />
<text  x="290.49" y="351.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.11%)</title><rect x="648.0" y="389" width="1.3" height="15.0" fill="rgb(227,224,50)" rx="2" ry="2" />
<text  x="650.98" y="399.5" ></text>
</g>
<g >
<title>do_execve (1 samples, 0.11%)</title><rect x="1175.7" y="405" width="1.3" height="15.0" fill="rgb(220,22,5)" rx="2" ry="2" />
<text  x="1178.74" y="415.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.11%)</title><rect x="161.7" y="325" width="1.3" height="15.0" fill="rgb(252,148,32)" rx="2" ry="2" />
<text  x="164.71" y="335.5" ></text>
</g>
<g >
<title>perf_pmu_disable (2 samples, 0.22%)</title><rect x="141.0" y="293" width="2.6" height="15.0" fill="rgb(216,46,8)" rx="2" ry="2" />
<text  x="143.97" y="303.5" ></text>
</g>
<g >
<title>child_rip (16 samples, 1.76%)</title><rect x="623.3" y="453" width="20.8" height="15.0" fill="rgb(254,223,33)" rx="2" ry="2" />
<text  x="626.34" y="463.5" ></text>
</g>
<g >
<title>show_stat (1 samples, 0.11%)</title><rect x="620.7" y="357" width="1.3" height="15.0" fill="rgb(216,9,42)" rx="2" ry="2" />
<text  x="623.75" y="367.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.11%)</title><rect x="155.2" y="325" width="1.3" height="15.0" fill="rgb(218,44,10)" rx="2" ry="2" />
<text  x="158.23" y="335.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.11%)</title><rect x="286.2" y="341" width="1.3" height="15.0" fill="rgb(215,67,11)" rx="2" ry="2" />
<text  x="289.20" y="351.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.11%)</title><rect x="613.0" y="373" width="1.3" height="15.0" fill="rgb(248,137,24)" rx="2" ry="2" />
<text  x="615.97" y="383.5" ></text>
</g>
<g >
<title>__local_bh_enable (1 samples, 0.11%)</title><rect x="152.6" y="357" width="1.3" height="15.0" fill="rgb(249,3,19)" rx="2" ry="2" />
<text  x="155.64" y="367.5" ></text>
</g>
<g >
<title>_spin_lock (1 samples, 0.11%)</title><rect x="72.2" y="309" width="1.3" height="15.0" fill="rgb(253,99,34)" rx="2" ry="2" />
<text  x="75.24" y="319.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.11%)</title><rect x="646.7" y="389" width="1.3" height="15.0" fill="rgb(222,159,45)" rx="2" ry="2" />
<text  x="649.68" y="399.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.11%)</title><rect x="224.0" y="181" width="1.3" height="15.0" fill="rgb(240,208,40)" rx="2" ry="2" />
<text  x="226.96" y="191.5" ></text>
</g>
<g >
<title>_spin_lock (1 samples, 0.11%)</title><rect x="130.6" y="293" width="1.3" height="15.0" fill="rgb(216,109,39)" rx="2" ry="2" />
<text  x="133.59" y="303.5" ></text>
</g>
<g >
<title>_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="615.6" y="389" width="1.3" height="15.0" fill="rgb(214,153,7)" rx="2" ry="2" />
<text  x="618.56" y="399.5" ></text>
</g>
<g >
<title>__execve (1 samples, 0.11%)</title><rect x="1175.7" y="453" width="1.3" height="15.0" fill="rgb(229,31,9)" rx="2" ry="2" />
<text  x="1178.74" y="463.5" ></text>
</g>
<g >
<title>native_read_tsc (1 samples, 0.11%)</title><rect x="148.7" y="325" width="1.3" height="15.0" fill="rgb(238,175,46)" rx="2" ry="2" />
<text  x="151.75" y="335.5" ></text>
</g>
<g >
<title>remote_function (88 samples, 9.67%)</title><rect x="288.8" y="357" width="114.1" height="15.0" fill="rgb(206,99,33)" rx="2" ry="2" />
<text  x="291.79" y="367.5" >remote_function</text>
</g>
<g >
<title>find_busiest_group (3 samples, 0.33%)</title><rect x="214.9" y="277" width="3.9" height="15.0" fill="rgb(249,147,12)" rx="2" ry="2" />
<text  x="217.88" y="287.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.11%)</title><rect x="224.0" y="245" width="1.3" height="15.0" fill="rgb(227,168,26)" rx="2" ry="2" />
<text  x="226.96" y="255.5" ></text>
</g>
<g >
<title>update_wall_time (23 samples, 2.53%)</title><rect x="76.1" y="293" width="29.9" height="15.0" fill="rgb(226,68,33)" rx="2" ry="2" />
<text  x="79.13" y="303.5" >up..</text>
</g>
<g >
<title>perf_pmu_disable (3 samples, 0.33%)</title><rect x="137.1" y="277" width="3.9" height="15.0" fill="rgb(250,142,42)" rx="2" ry="2" />
<text  x="140.08" y="287.5" ></text>
</g>
<g >
<title>call_softirq (1 samples, 0.11%)</title><rect x="170.8" y="357" width="1.3" height="15.0" fill="rgb(205,67,17)" rx="2" ry="2" />
<text  x="173.79" y="367.5" ></text>
</g>
<g >
<title>tick_dev_program_event (1 samples, 0.11%)</title><rect x="613.0" y="325" width="1.3" height="15.0" fill="rgb(234,136,9)" rx="2" ry="2" />
<text  x="615.97" y="335.5" ></text>
</g>
<g >
<title>perf_ioctl (5 samples, 0.55%)</title><rect x="1177.0" y="309" width="6.5" height="15.0" fill="rgb(244,87,51)" rx="2" ry="2" />
<text  x="1180.03" y="319.5" ></text>
</g>
<g >
<title>rest_init (4 samples, 0.44%)</title><rect x="1184.8" y="405" width="5.2" height="15.0" fill="rgb(218,90,24)" rx="2" ry="2" />
<text  x="1187.81" y="415.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.11%)</title><rect x="622.0" y="357" width="1.3" height="15.0" fill="rgb(240,95,35)" rx="2" ry="2" />
<text  x="625.04" y="367.5" ></text>
</g>
<g >
<title>schedule_timeout_interruptible (1 samples, 0.11%)</title><rect x="622.0" y="405" width="1.3" height="15.0" fill="rgb(208,115,1)" rx="2" ry="2" />
<text  x="625.04" y="415.5" ></text>
</g>
<g >
<title>start_secondary (465 samples, 51.10%)</title><rect x="15.2" y="453" width="603.0" height="15.0" fill="rgb(212,197,12)" rx="2" ry="2" />
<text  x="18.19" y="463.5" >start_secondary</text>
</g>
<g >
<title>cpumask_next_and (2 samples, 0.22%)</title><rect x="216.2" y="261" width="2.6" height="15.0" fill="rgb(250,32,48)" rx="2" ry="2" />
<text  x="219.18" y="271.5" ></text>
</g>
<g >
<title>tick_check_idle (10 samples, 1.10%)</title><rect x="153.9" y="357" width="13.0" height="15.0" fill="rgb(237,224,1)" rx="2" ry="2" />
<text  x="156.93" y="367.5" ></text>
</g>
<g >
<title>free_pgtables (1 samples, 0.11%)</title><rect x="1175.7" y="309" width="1.3" height="15.0" fill="rgb(208,61,45)" rx="2" ry="2" />
<text  x="1178.74" y="319.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.11%)</title><rect x="67.1" y="325" width="1.3" height="15.0" fill="rgb(242,20,39)" rx="2" ry="2" />
<text  x="70.05" y="335.5" ></text>
</g>
<g >
<title>force_quiescent_state (1 samples, 0.11%)</title><rect x="212.3" y="293" width="1.3" height="15.0" fill="rgb(233,126,28)" rx="2" ry="2" />
<text  x="215.29" y="303.5" ></text>
</g>
<g >
<title>format_decode (1 samples, 0.11%)</title><rect x="620.7" y="309" width="1.3" height="15.0" fill="rgb(245,138,13)" rx="2" ry="2" />
<text  x="623.75" y="319.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (86 samples, 9.45%)</title><rect x="291.4" y="245" width="111.5" height="15.0" fill="rgb(222,163,46)" rx="2" ry="2" />
<text  x="294.38" y="255.5" >intel_pmu_ena..</text>
</g>
<g >
<title>thread_return (1 samples, 0.11%)</title><rect x="646.7" y="405" width="1.3" height="15.0" fill="rgb(219,68,7)" rx="2" ry="2" />
<text  x="649.68" y="415.5" ></text>
</g>
<g >
<title>ns_to_timespec (1 samples, 0.11%)</title><rect x="607.8" y="405" width="1.3" height="15.0" fill="rgb(222,126,12)" rx="2" ry="2" />
<text  x="610.78" y="415.5" ></text>
</g>
<g >
<title>rb_insert_color (2 samples, 0.22%)</title><rect x="54.1" y="325" width="2.6" height="15.0" fill="rgb(213,137,26)" rx="2" ry="2" />
<text  x="57.09" y="335.5" ></text>
</g>
<g >
<title>sys_read (3 samples, 0.33%)</title><rect x="618.2" y="421" width="3.8" height="15.0" fill="rgb(205,141,27)" rx="2" ry="2" />
<text  x="621.15" y="431.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.11%)</title><rect x="618.2" y="357" width="1.3" height="15.0" fill="rgb(225,198,41)" rx="2" ry="2" />
<text  x="621.15" y="367.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (24 samples, 2.64%)</title><rect x="238.2" y="245" width="31.1" height="15.0" fill="rgb(239,91,1)" rx="2" ry="2" />
<text  x="241.22" y="255.5" >ge..</text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.11%)</title><rect x="1175.7" y="389" width="1.3" height="15.0" fill="rgb(208,111,26)" rx="2" ry="2" />
<text  x="1178.74" y="399.5" ></text>
</g>
<g >
<title>migration/15 (1 samples, 0.11%)</title><rect x="646.7" y="469" width="1.3" height="15.0" fill="rgb(207,10,30)" rx="2" ry="2" />
<text  x="649.68" y="479.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (461 samples, 50.66%)</title><rect x="15.2" y="421" width="597.8" height="15.0" fill="rgb(247,110,33)" rx="2" ry="2" />
<text  x="18.19" y="431.5" >cpuidle_idle_call</text>
</g>
<g >
<title>all (910 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(231,67,46)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>cpufreq_get_measured_perf (1 samples, 0.11%)</title><rect x="644.1" y="373" width="1.3" height="15.0" fill="rgb(229,151,16)" rx="2" ry="2" />
<text  x="647.09" y="383.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (1 samples, 0.11%)</title><rect x="224.0" y="293" width="1.3" height="15.0" fill="rgb(240,48,7)" rx="2" ry="2" />
<text  x="226.96" y="303.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.22%)</title><rect x="273.2" y="357" width="2.6" height="15.0" fill="rgb(208,114,40)" rx="2" ry="2" />
<text  x="276.23" y="367.5" ></text>
</g>
<g >
<title>flush_old_exec (1 samples, 0.11%)</title><rect x="1175.7" y="357" width="1.3" height="15.0" fill="rgb(237,174,54)" rx="2" ry="2" />
<text  x="1178.74" y="367.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.11%)</title><rect x="229.1" y="261" width="1.3" height="15.0" fill="rgb(226,29,29)" rx="2" ry="2" />
<text  x="232.14" y="271.5" ></text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.11%)</title><rect x="648.0" y="421" width="1.3" height="15.0" fill="rgb(244,12,52)" rx="2" ry="2" />
<text  x="650.98" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_stop_sched_tick (10 samples, 1.10%)</title><rect x="275.8" y="357" width="13.0" height="15.0" fill="rgb(214,106,11)" rx="2" ry="2" />
<text  x="278.82" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (69 samples, 7.58%)</title><rect x="58.0" y="341" width="89.5" height="15.0" fill="rgb(233,37,20)" rx="2" ry="2" />
<text  x="60.98" y="351.5" >tick_sched..</text>
</g>
<g >
<title>cpu_idle (464 samples, 50.99%)</title><rect x="15.2" y="437" width="601.7" height="15.0" fill="rgb(211,224,48)" rx="2" ry="2" />
<text  x="18.19" y="447.5" >cpu_idle</text>
</g>
<g >
<title>drain_array (1 samples, 0.11%)</title><rect x="11.3" y="389" width="1.3" height="15.0" fill="rgb(226,187,42)" rx="2" ry="2" />
<text  x="14.30" y="399.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.11%)</title><rect x="56.7" y="325" width="1.3" height="15.0" fill="rgb(215,57,41)" rx="2" ry="2" />
<text  x="59.68" y="335.5" ></text>
</g>
<g >
<title>sys_ioctl (5 samples, 0.55%)</title><rect x="1177.0" y="357" width="6.5" height="15.0" fill="rgb(254,36,52)" rx="2" ry="2" />
<text  x="1180.03" y="367.5" ></text>
</g>
<g >
<title>update_cfs_shares (1 samples, 0.11%)</title><rect x="271.9" y="197" width="1.3" height="15.0" fill="rgb(210,149,28)" rx="2" ry="2" />
<text  x="274.93" y="207.5" ></text>
</g>
<g >
<title>__remove_hrtimer (4 samples, 0.44%)</title><rect x="42.4" y="341" width="5.2" height="15.0" fill="rgb(250,51,41)" rx="2" ry="2" />
<text  x="45.42" y="351.5" ></text>
</g>
<g >
<title>__libc_start_main (6 samples, 0.66%)</title><rect x="1177.0" y="453" width="7.8" height="15.0" fill="rgb(217,54,54)" rx="2" ry="2" />
<text  x="1180.03" y="463.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.11%)</title><rect x="610.4" y="405" width="1.3" height="15.0" fill="rgb(216,180,13)" rx="2" ry="2" />
<text  x="613.37" y="415.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.22%)</title><rect x="144.9" y="293" width="2.6" height="15.0" fill="rgb(224,2,34)" rx="2" ry="2" />
<text  x="147.86" y="303.5" ></text>
</g>
<g >
<title>main (6 samples, 0.66%)</title><rect x="1177.0" y="437" width="7.8" height="15.0" fill="rgb(226,199,11)" rx="2" ry="2" />
<text  x="1180.03" y="447.5" ></text>
</g>
<g >
<title>khugepaged (1 samples, 0.11%)</title><rect x="622.0" y="421" width="1.3" height="15.0" fill="rgb(227,221,21)" rx="2" ry="2" />
<text  x="625.04" y="431.5" ></text>
</g>
<g >
<title>native_write_msr_safe (4 samples, 0.44%)</title><rect x="1178.3" y="117" width="5.2" height="15.0" fill="rgb(214,156,6)" rx="2" ry="2" />
<text  x="1181.33" y="127.5" ></text>
</g>
<g >
<title>run_timer_softirq (42 samples, 4.62%)</title><rect x="218.8" y="309" width="54.4" height="15.0" fill="rgb(232,192,53)" rx="2" ry="2" />
<text  x="221.77" y="319.5" >run_t..</text>
</g>
<g >
<title>schedule (1 samples, 0.11%)</title><rect x="623.3" y="405" width="1.3" height="15.0" fill="rgb(230,83,19)" rx="2" ry="2" />
<text  x="626.34" y="415.5" ></text>
</g>
<g >
<title>smp_call_function_single (5 samples, 0.55%)</title><rect x="1177.0" y="261" width="6.5" height="15.0" fill="rgb(225,217,24)" rx="2" ry="2" />
<text  x="1180.03" y="271.5" ></text>
</g>
<g >
<title>vmstat_update (1 samples, 0.11%)</title><rect x="12.6" y="405" width="1.3" height="15.0" fill="rgb(237,197,51)" rx="2" ry="2" />
<text  x="15.59" y="415.5" ></text>
</g>
<g >
<title>rebalance_domains (3 samples, 0.33%)</title><rect x="214.9" y="293" width="3.9" height="15.0" fill="rgb(254,13,12)" rx="2" ry="2" />
<text  x="217.88" y="303.5" ></text>
</g>
<g >
<title>read_measured_perf_ctrs (1 samples, 0.11%)</title><rect x="644.1" y="341" width="1.3" height="15.0" fill="rgb(246,88,10)" rx="2" ry="2" />
<text  x="647.09" y="351.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (88 samples, 9.67%)</title><rect x="288.8" y="389" width="114.1" height="15.0" fill="rgb(236,225,39)" rx="2" ry="2" />
<text  x="291.79" y="399.5" >smp_call_funct..</text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.11%)</title><rect x="56.7" y="261" width="1.3" height="15.0" fill="rgb(239,168,20)" rx="2" ry="2" />
<text  x="59.68" y="271.5" ></text>
</g>
<g >
<title>sched_clock_idle_wakeup_event (2 samples, 0.22%)</title><rect x="156.5" y="341" width="2.6" height="15.0" fill="rgb(214,14,19)" rx="2" ry="2" />
<text  x="159.53" y="351.5" ></text>
</g>
<g >
<title>hrtimer_forward (2 samples, 0.22%)</title><rect x="60.6" y="325" width="2.6" height="15.0" fill="rgb(227,29,13)" rx="2" ry="2" />
<text  x="63.57" y="335.5" ></text>
</g>
<g >
<title>_spin_lock (7 samples, 0.77%)</title><rect x="96.9" y="261" width="9.1" height="15.0" fill="rgb(219,177,7)" rx="2" ry="2" />
<text  x="99.88" y="271.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (3 samples, 0.33%)</title><rect x="115.0" y="309" width="3.9" height="15.0" fill="rgb(206,221,9)" rx="2" ry="2" />
<text  x="118.03" y="319.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.11%)</title><rect x="613.0" y="405" width="1.3" height="15.0" fill="rgb(222,7,32)" rx="2" ry="2" />
<text  x="615.97" y="415.5" ></text>
</g>
<g >
<title>migration_thread (1 samples, 0.11%)</title><rect x="646.7" y="421" width="1.3" height="15.0" fill="rgb(236,124,5)" rx="2" ry="2" />
<text  x="649.68" y="431.5" ></text>
</g>
<g >
<title>__link_path_walk (1 samples, 0.11%)</title><rect x="1183.5" y="245" width="1.3" height="15.0" fill="rgb(227,97,40)" rx="2" ry="2" />
<text  x="1186.52" y="255.5" ></text>
</g>
<g >
<title>vfs_read (3 samples, 0.33%)</title><rect x="618.2" y="405" width="3.8" height="15.0" fill="rgb(219,35,14)" rx="2" ry="2" />
<text  x="621.15" y="415.5" ></text>
</g>
<g >
<title>save_args (1 samples, 0.11%)</title><rect x="611.7" y="405" width="1.3" height="15.0" fill="rgb(247,87,43)" rx="2" ry="2" />
<text  x="614.67" y="415.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.11%)</title><rect x="10.0" y="421" width="1.3" height="15.0" fill="rgb(241,102,34)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>__rcu_process_callbacks (2 samples, 0.22%)</title><rect x="1173.1" y="325" width="2.6" height="15.0" fill="rgb(213,198,11)" rx="2" ry="2" />
<text  x="1176.14" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_stop_sched_tick (2 samples, 0.22%)</title><rect x="614.3" y="421" width="2.6" height="15.0" fill="rgb(237,115,25)" rx="2" ry="2" />
<text  x="617.26" y="431.5" ></text>
</g>
<g >
<title>menu_select (9 samples, 0.99%)</title><rect x="596.1" y="405" width="11.7" height="15.0" fill="rgb(229,3,6)" rx="2" ry="2" />
<text  x="599.11" y="415.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.11%)</title><rect x="224.0" y="261" width="1.3" height="15.0" fill="rgb(241,214,4)" rx="2" ry="2" />
<text  x="226.96" y="271.5" ></text>
</g>
<g >
<title>ktime_get (2 samples, 0.22%)</title><rect x="147.5" y="357" width="2.5" height="15.0" fill="rgb(230,123,33)" rx="2" ry="2" />
<text  x="150.45" y="367.5" ></text>
</g>
<g >
<title>path_walk (1 samples, 0.11%)</title><rect x="1183.5" y="261" width="1.3" height="15.0" fill="rgb(234,176,10)" rx="2" ry="2" />
<text  x="1186.52" y="271.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.11%)</title><rect x="148.7" y="341" width="1.3" height="15.0" fill="rgb(253,154,16)" rx="2" ry="2" />
<text  x="151.75" y="351.5" ></text>
</g>
<g >
<title>perf_pmu_enable (4 samples, 0.44%)</title><rect x="1178.3" y="181" width="5.2" height="15.0" fill="rgb(214,146,37)" rx="2" ry="2" />
<text  x="1181.33" y="191.5" ></text>
</g>
<g >
<title>memset (1 samples, 0.11%)</title><rect x="619.5" y="325" width="1.2" height="15.0" fill="rgb(231,61,49)" rx="2" ry="2" />
<text  x="622.45" y="335.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.11%)</title><rect x="271.9" y="261" width="1.3" height="15.0" fill="rgb(250,135,12)" rx="2" ry="2" />
<text  x="274.93" y="271.5" ></text>
</g>
<g >
<title>run_builtin (6 samples, 0.66%)</title><rect x="1177.0" y="421" width="7.8" height="15.0" fill="rgb(240,11,6)" rx="2" ry="2" />
<text  x="1180.03" y="431.5" ></text>
</g>
<g >
<title>khugepaged (1 samples, 0.11%)</title><rect x="622.0" y="469" width="1.3" height="15.0" fill="rgb(209,41,43)" rx="2" ry="2" />
<text  x="625.04" y="479.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.11%)</title><rect x="59.3" y="325" width="1.3" height="15.0" fill="rgb(240,68,5)" rx="2" ry="2" />
<text  x="62.27" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.11%)</title><rect x="1171.8" y="405" width="1.3" height="15.0" fill="rgb(250,105,51)" rx="2" ry="2" />
<text  x="1174.85" y="415.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.11%)</title><rect x="1175.7" y="373" width="1.3" height="15.0" fill="rgb(219,106,33)" rx="2" ry="2" />
<text  x="1178.74" y="383.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.11%)</title><rect x="646.7" y="437" width="1.3" height="15.0" fill="rgb(245,107,3)" rx="2" ry="2" />
<text  x="649.68" y="447.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.11%)</title><rect x="10.0" y="389" width="1.3" height="15.0" fill="rgb(212,43,42)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.11%)</title><rect x="644.1" y="437" width="1.3" height="15.0" fill="rgb(211,83,35)" rx="2" ry="2" />
<text  x="647.09" y="447.5" ></text>
</g>
<g >
<title>naive (406 samples, 44.62%)</title><rect x="649.3" y="469" width="526.4" height="15.0" fill="rgb(238,123,18)" rx="2" ry="2" />
<text  x="652.27" y="479.5" >naive</text>
</g>
<g >
<title>irqbalance (3 samples, 0.33%)</title><rect x="618.2" y="469" width="3.8" height="15.0" fill="rgb(217,218,29)" rx="2" ry="2" />
<text  x="621.15" y="479.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.11%)</title><rect x="224.0" y="229" width="1.3" height="15.0" fill="rgb(219,199,27)" rx="2" ry="2" />
<text  x="226.96" y="239.5" ></text>
</g>
<g >
<title>multiply_matrices_loop_interchange (406 samples, 44.62%)</title><rect x="649.3" y="453" width="526.4" height="15.0" fill="rgb(231,115,43)" rx="2" ry="2" />
<text  x="652.27" y="463.5" >multiply_matrices_loop_interchange</text>
</g>
<g >
<title>__perf_event_enable (88 samples, 9.67%)</title><rect x="288.8" y="341" width="114.1" height="15.0" fill="rgb(205,172,12)" rx="2" ry="2" />
<text  x="291.79" y="351.5" >__perf_event_e..</text>
</g>
<g >
<title>intel_pmu_disable_all (1 samples, 0.11%)</title><rect x="137.1" y="261" width="1.3" height="15.0" fill="rgb(240,184,22)" rx="2" ry="2" />
<text  x="140.08" y="271.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.11%)</title><rect x="646.7" y="373" width="1.3" height="15.0" fill="rgb(219,153,29)" rx="2" ry="2" />
<text  x="649.68" y="383.5" ></text>
</g>
<g >
<title>stub_execve (1 samples, 0.11%)</title><rect x="1175.7" y="437" width="1.3" height="15.0" fill="rgb(223,65,33)" rx="2" ry="2" />
<text  x="1178.74" y="447.5" ></text>
</g>
<g >
<title>child_rip (1 samples, 0.11%)</title><rect x="12.6" y="453" width="1.3" height="15.0" fill="rgb(235,165,41)" rx="2" ry="2" />
<text  x="15.59" y="463.5" ></text>
</g>
<g >
<title>perf_pmu_enable (88 samples, 9.67%)</title><rect x="288.8" y="293" width="114.1" height="15.0" fill="rgb(252,70,27)" rx="2" ry="2" />
<text  x="291.79" y="303.5" >perf_pmu_enable</text>
</g>
<g >
<title>kthread (1 samples, 0.11%)</title><rect x="645.4" y="437" width="1.3" height="15.0" fill="rgb(245,213,38)" rx="2" ry="2" />
<text  x="648.38" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.33%)</title><rect x="1171.8" y="437" width="3.9" height="15.0" fill="rgb(249,156,28)" rx="2" ry="2" />
<text  x="1174.85" y="447.5" ></text>
</g>
<g >
<title>hrtimer_run_queues (1 samples, 0.11%)</title><rect x="113.7" y="293" width="1.3" height="15.0" fill="rgb(218,119,51)" rx="2" ry="2" />
<text  x="116.74" y="303.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (209 samples, 22.97%)</title><rect x="17.8" y="405" width="271.0" height="15.0" fill="rgb(232,87,27)" rx="2" ry="2" />
<text  x="20.78" y="415.5" >apic_timer_interrupt</text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.11%)</title><rect x="1177.0" y="245" width="1.3" height="15.0" fill="rgb(232,85,22)" rx="2" ry="2" />
<text  x="1180.03" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.11%)</title><rect x="1175.7" y="261" width="1.3" height="15.0" fill="rgb(216,141,31)" rx="2" ry="2" />
<text  x="1178.74" y="271.5" ></text>
</g>
<g >
<title>call_softirq (76 samples, 8.35%)</title><rect x="174.7" y="341" width="98.5" height="15.0" fill="rgb(219,97,34)" rx="2" ry="2" />
<text  x="177.68" y="351.5" >call_softirq</text>
</g>
<g >
<title>child_rip (1 samples, 0.11%)</title><rect x="644.1" y="453" width="1.3" height="15.0" fill="rgb(215,59,51)" rx="2" ry="2" />
<text  x="647.09" y="463.5" ></text>
</g>
<g >
<title>update_cpu_load (1 samples, 0.11%)</title><rect x="143.6" y="293" width="1.3" height="15.0" fill="rgb(229,170,2)" rx="2" ry="2" />
<text  x="146.56" y="303.5" ></text>
</g>
<g >
<title>proc_reg_read (3 samples, 0.33%)</title><rect x="618.2" y="389" width="3.8" height="15.0" fill="rgb(252,112,6)" rx="2" ry="2" />
<text  x="621.15" y="399.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (29 samples, 3.19%)</title><rect x="68.4" y="325" width="37.6" height="15.0" fill="rgb(254,7,9)" rx="2" ry="2" />
<text  x="71.35" y="335.5" >tic..</text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.44%)</title><rect x="1184.8" y="229" width="5.2" height="15.0" fill="rgb(226,52,45)" rx="2" ry="2" />
<text  x="1187.81" y="239.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.11%)</title><rect x="644.1" y="421" width="1.3" height="15.0" fill="rgb(234,11,49)" rx="2" ry="2" />
<text  x="647.09" y="431.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (6 samples, 0.66%)</title><rect x="48.9" y="341" width="7.8" height="15.0" fill="rgb(232,93,27)" rx="2" ry="2" />
<text  x="51.90" y="351.5" ></text>
</g>
<g >
<title>do_execve (1 samples, 0.11%)</title><rect x="1183.5" y="325" width="1.3" height="15.0" fill="rgb(229,176,2)" rx="2" ry="2" />
<text  x="1186.52" y="335.5" ></text>
</g>
<g >
<title>call_softirq (1 samples, 0.11%)</title><rect x="645.4" y="405" width="1.3" height="15.0" fill="rgb(212,160,11)" rx="2" ry="2" />
<text  x="648.38" y="415.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.11%)</title><rect x="271.9" y="277" width="1.3" height="15.0" fill="rgb(227,83,53)" rx="2" ry="2" />
<text  x="274.93" y="287.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.44%)</title><rect x="1184.8" y="293" width="5.2" height="15.0" fill="rgb(222,54,6)" rx="2" ry="2" />
<text  x="1187.81" y="303.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (5 samples, 0.55%)</title><rect x="1177.0" y="341" width="6.5" height="15.0" fill="rgb(224,22,40)" rx="2" ry="2" />
<text  x="1180.03" y="351.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.11%)</title><rect x="645.4" y="373" width="1.3" height="15.0" fill="rgb(205,76,31)" rx="2" ry="2" />
<text  x="648.38" y="383.5" ></text>
</g>
<g >
<title>native_read_msr_safe (1 samples, 0.11%)</title><rect x="644.1" y="325" width="1.3" height="15.0" fill="rgb(249,17,3)" rx="2" ry="2" />
<text  x="647.09" y="335.5" ></text>
</g>
<g >
<title>perf_pmu_enable (4 samples, 0.44%)</title><rect x="1184.8" y="245" width="5.2" height="15.0" fill="rgb(237,174,44)" rx="2" ry="2" />
<text  x="1187.81" y="255.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (88 samples, 9.67%)</title><rect x="288.8" y="405" width="114.1" height="15.0" fill="rgb(211,40,1)" rx="2" ry="2" />
<text  x="291.79" y="415.5" >call_function_..</text>
</g>
<g >
<title>__rcu_pending (1 samples, 0.11%)</title><rect x="106.0" y="309" width="1.3" height="15.0" fill="rgb(221,42,48)" rx="2" ry="2" />
<text  x="108.96" y="319.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.11%)</title><rect x="587.0" y="373" width="1.3" height="15.0" fill="rgb(231,72,27)" rx="2" ry="2" />
<text  x="590.03" y="383.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.11%)</title><rect x="12.6" y="437" width="1.3" height="15.0" fill="rgb(224,172,8)" rx="2" ry="2" />
<text  x="15.59" y="447.5" ></text>
</g>
<g >
<title>mx_linux_kwindow_timer (36 samples, 3.96%)</title><rect x="225.3" y="293" width="46.6" height="15.0" fill="rgb(251,132,9)" rx="2" ry="2" />
<text  x="228.25" y="303.5" >mx_l..</text>
</g>
<g >
<title>_spin_lock (1 samples, 0.11%)</title><rect x="47.6" y="341" width="1.3" height="15.0" fill="rgb(250,185,51)" rx="2" ry="2" />
<text  x="50.60" y="351.5" ></text>
</g>
<g >
<title>tick_program_event (2 samples, 0.22%)</title><rect x="150.0" y="357" width="2.6" height="15.0" fill="rgb(254,133,14)" rx="2" ry="2" />
<text  x="153.04" y="367.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.44%)</title><rect x="1178.3" y="245" width="5.2" height="15.0" fill="rgb(207,45,24)" rx="2" ry="2" />
<text  x="1181.33" y="255.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.11%)</title><rect x="11.3" y="421" width="1.3" height="15.0" fill="rgb(232,32,19)" rx="2" ry="2" />
<text  x="14.30" y="431.5" ></text>
</g>
<g >
<title>x86_pmu_commit_txn (88 samples, 9.67%)</title><rect x="288.8" y="309" width="114.1" height="15.0" fill="rgb(223,225,4)" rx="2" ry="2" />
<text  x="291.79" y="319.5" >x86_pmu_commit..</text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.11%)</title><rect x="269.3" y="245" width="1.3" height="15.0" fill="rgb(252,216,11)" rx="2" ry="2" />
<text  x="272.34" y="255.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.44%)</title><rect x="1178.3" y="165" width="5.2" height="15.0" fill="rgb(212,189,39)" rx="2" ry="2" />
<text  x="1181.33" y="175.5" ></text>
</g>
<g >
<title>do_dbs_timer (1 samples, 0.11%)</title><rect x="644.1" y="405" width="1.3" height="15.0" fill="rgb(239,13,49)" rx="2" ry="2" />
<text  x="647.09" y="415.5" ></text>
</g>
<g >
<title>set_next_entity (1 samples, 0.11%)</title><rect x="623.3" y="373" width="1.3" height="15.0" fill="rgb(217,41,43)" rx="2" ry="2" />
<text  x="626.34" y="383.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.11%)</title><rect x="623.3" y="389" width="1.3" height="15.0" fill="rgb(215,127,24)" rx="2" ry="2" />
<text  x="626.34" y="399.5" ></text>
</g>
<g >
<title>hrtimer_start (1 samples, 0.11%)</title><rect x="615.6" y="405" width="1.3" height="15.0" fill="rgb(233,125,35)" rx="2" ry="2" />
<text  x="618.56" y="415.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.11%)</title><rect x="155.2" y="341" width="1.3" height="15.0" fill="rgb(243,99,14)" rx="2" ry="2" />
<text  x="158.23" y="351.5" ></text>
</g>
<g >
<title>check_for_new_grace_period (4 samples, 0.44%)</title><rect x="198.0" y="277" width="5.2" height="15.0" fill="rgb(244,54,29)" rx="2" ry="2" />
<text  x="201.02" y="287.5" ></text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.11%)</title><rect x="224.0" y="213" width="1.3" height="15.0" fill="rgb(205,155,25)" rx="2" ry="2" />
<text  x="226.96" y="223.5" ></text>
</g>
<g >
<title>events/5 (1 samples, 0.11%)</title><rect x="12.6" y="469" width="1.3" height="15.0" fill="rgb(209,40,54)" rx="2" ry="2" />
<text  x="15.59" y="479.5" ></text>
</g>
<g >
<title>child_rip (1 samples, 0.11%)</title><rect x="648.0" y="453" width="1.3" height="15.0" fill="rgb(206,155,10)" rx="2" ry="2" />
<text  x="650.98" y="463.5" ></text>
</g>
<g >
<title>process_timeout (1 samples, 0.11%)</title><rect x="271.9" y="293" width="1.3" height="15.0" fill="rgb(247,133,12)" rx="2" ry="2" />
<text  x="274.93" y="303.5" ></text>
</g>
<g >
<title>xdr_encode_opaque_fixed (1 samples, 0.11%)</title><rect x="1183.5" y="37" width="1.3" height="15.0" fill="rgb(219,188,48)" rx="2" ry="2" />
<text  x="1186.52" y="47.5" ></text>
</g>
<g >
<title>rcu_process_gp_end (5 samples, 0.55%)</title><rect x="205.8" y="277" width="6.5" height="15.0" fill="rgb(221,101,32)" rx="2" ry="2" />
<text  x="208.80" y="287.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.11%)</title><rect x="645.4" y="341" width="1.3" height="15.0" fill="rgb(209,106,36)" rx="2" ry="2" />
<text  x="648.38" y="351.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.11%)</title><rect x="224.0" y="117" width="1.3" height="15.0" fill="rgb(221,165,44)" rx="2" ry="2" />
<text  x="226.96" y="127.5" ></text>
</g>
<g >
<title>seq_read (2 samples, 0.22%)</title><rect x="619.5" y="373" width="2.5" height="15.0" fill="rgb(219,115,21)" rx="2" ry="2" />
<text  x="622.45" y="383.5" ></text>
</g>
<g >
<title>port_inb (14 samples, 1.54%)</title><rect x="624.6" y="373" width="18.2" height="15.0" fill="rgb(221,81,53)" rx="2" ry="2" />
<text  x="627.64" y="383.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.11%)</title><rect x="1183.5" y="293" width="1.3" height="15.0" fill="rgb(232,13,21)" rx="2" ry="2" />
<text  x="1186.52" y="303.5" ></text>
</g>
<g >
<title>ns_to_timespec (1 samples, 0.11%)</title><rect x="606.5" y="389" width="1.3" height="15.0" fill="rgb(209,93,52)" rx="2" ry="2" />
<text  x="609.48" y="399.5" ></text>
</g>
<g >
<title>child_rip (1 samples, 0.11%)</title><rect x="11.3" y="453" width="1.3" height="15.0" fill="rgb(223,139,1)" rx="2" ry="2" />
<text  x="14.30" y="463.5" ></text>
</g>
<g >
<title>__do_softirq (1 samples, 0.11%)</title><rect x="645.4" y="389" width="1.3" height="15.0" fill="rgb(239,65,1)" rx="2" ry="2" />
<text  x="648.38" y="399.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.11%)</title><rect x="1171.8" y="389" width="1.3" height="15.0" fill="rgb(231,47,2)" rx="2" ry="2" />
<text  x="1174.85" y="399.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.11%)</title><rect x="107.3" y="309" width="1.2" height="15.0" fill="rgb(218,112,37)" rx="2" ry="2" />
<text  x="110.25" y="319.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.11%)</title><rect x="13.9" y="453" width="1.3" height="15.0" fill="rgb(236,51,14)" rx="2" ry="2" />
<text  x="16.89" y="463.5" ></text>
</g>
<g >
<title>do_path_lookup (1 samples, 0.11%)</title><rect x="1183.5" y="277" width="1.3" height="15.0" fill="rgb(213,89,21)" rx="2" ry="2" />
<text  x="1186.52" y="287.5" ></text>
</g>
<g >
<title>update_process_times (32 samples, 3.52%)</title><rect x="106.0" y="325" width="41.5" height="15.0" fill="rgb(237,86,21)" rx="2" ry="2" />
<text  x="108.96" y="335.5" >upd..</text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.11%)</title><rect x="613.0" y="357" width="1.3" height="15.0" fill="rgb(239,138,11)" rx="2" ry="2" />
<text  x="615.97" y="367.5" ></text>
</g>
<g >
<title>touch_softlockup_watchdog (1 samples, 0.11%)</title><rect x="163.0" y="309" width="1.3" height="15.0" fill="rgb(241,76,34)" rx="2" ry="2" />
<text  x="166.01" y="319.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (2 samples, 0.22%)</title><rect x="1173.1" y="341" width="2.6" height="15.0" fill="rgb(207,32,5)" rx="2" ry="2" />
<text  x="1176.14" y="351.5" ></text>
</g>
<g >
<title>kondemand/2 (1 samples, 0.11%)</title><rect x="644.1" y="469" width="1.3" height="15.0" fill="rgb(219,206,28)" rx="2" ry="2" />
<text  x="647.09" y="479.5" ></text>
</g>
<g >
<title>add_timer (33 samples, 3.63%)</title><rect x="227.8" y="277" width="42.8" height="15.0" fill="rgb(209,151,17)" rx="2" ry="2" />
<text  x="230.85" y="287.5" >add_..</text>
</g>
<g >
<title>x86_pmu_enable (88 samples, 9.67%)</title><rect x="288.8" y="277" width="114.1" height="15.0" fill="rgb(218,53,24)" rx="2" ry="2" />
<text  x="291.79" y="287.5" >x86_pmu_enable</text>
</g>
<g >
<title>[unknown] (3 samples, 0.33%)</title><rect x="618.2" y="453" width="3.8" height="15.0" fill="rgb(241,137,30)" rx="2" ry="2" />
<text  x="621.15" y="463.5" ></text>
</g>
<g >
<title>update_ts_time_stats (1 samples, 0.11%)</title><rect x="165.6" y="325" width="1.3" height="15.0" fill="rgb(229,16,24)" rx="2" ry="2" />
<text  x="168.60" y="335.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.11%)</title><rect x="46.3" y="325" width="1.3" height="15.0" fill="rgb(236,227,51)" rx="2" ry="2" />
<text  x="49.31" y="335.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.44%)</title><rect x="1184.8" y="325" width="5.2" height="15.0" fill="rgb(236,36,9)" rx="2" ry="2" />
<text  x="1187.81" y="335.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.44%)</title><rect x="1178.3" y="133" width="5.2" height="15.0" fill="rgb(249,125,9)" rx="2" ry="2" />
<text  x="1181.33" y="143.5" ></text>
</g>
<g >
<title>open_exec (1 samples, 0.11%)</title><rect x="1183.5" y="309" width="1.3" height="15.0" fill="rgb(225,47,24)" rx="2" ry="2" />
<text  x="1186.52" y="319.5" ></text>
</g>
<g >
<title>rpc_run_task (1 samples, 0.11%)</title><rect x="1183.5" y="133" width="1.3" height="15.0" fill="rgb(206,227,36)" rx="2" ry="2" />
<text  x="1186.52" y="143.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.44%)</title><rect x="1178.3" y="229" width="5.2" height="15.0" fill="rgb(239,21,19)" rx="2" ry="2" />
<text  x="1181.33" y="239.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.44%)</title><rect x="1184.8" y="357" width="5.2" height="15.0" fill="rgb(219,102,20)" rx="2" ry="2" />
<text  x="1187.81" y="367.5" ></text>
</g>
<g >
<title>rpc_execute (1 samples, 0.11%)</title><rect x="1183.5" y="117" width="1.3" height="15.0" fill="rgb(246,103,41)" rx="2" ry="2" />
<text  x="1186.52" y="127.5" ></text>
</g>
<g >
<title>nfs3_proc_getattr (1 samples, 0.11%)</title><rect x="1183.5" y="181" width="1.3" height="15.0" fill="rgb(245,1,52)" rx="2" ry="2" />
<text  x="1186.52" y="191.5" ></text>
</g>
<g >
<title>init (466 samples, 51.21%)</title><rect x="13.9" y="469" width="604.3" height="15.0" fill="rgb(224,195,30)" rx="2" ry="2" />
<text  x="16.89" y="479.5" >init</text>
</g>
<g >
<title>x86_pmu_commit_txn (4 samples, 0.44%)</title><rect x="1178.3" y="197" width="5.2" height="15.0" fill="rgb(244,209,53)" rx="2" ry="2" />
<text  x="1181.33" y="207.5" ></text>
</g>
<g >
<title>native_read_tsc (1 samples, 0.11%)</title><rect x="155.2" y="309" width="1.3" height="15.0" fill="rgb(207,186,3)" rx="2" ry="2" />
<text  x="158.23" y="319.5" ></text>
</g>
<g >
<title>__rcu_process_callbacks (19 samples, 2.09%)</title><rect x="187.6" y="293" width="24.7" height="15.0" fill="rgb(236,43,17)" rx="2" ry="2" />
<text  x="190.65" y="303.5" >_..</text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.11%)</title><rect x="10.0" y="373" width="1.3" height="15.0" fill="rgb(227,117,19)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast (2 samples, 0.22%)</title><rect x="159.1" y="341" width="2.6" height="15.0" fill="rgb(247,138,52)" rx="2" ry="2" />
<text  x="162.12" y="351.5" ></text>
</g>
<g >
<title>__do_softirq (1 samples, 0.11%)</title><rect x="173.4" y="341" width="1.3" height="15.0" fill="rgb(252,187,6)" rx="2" ry="2" />
<text  x="176.38" y="351.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.11%)</title><rect x="224.0" y="133" width="1.3" height="15.0" fill="rgb(234,6,48)" rx="2" ry="2" />
<text  x="226.96" y="143.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.11%)</title><rect x="45.0" y="325" width="1.3" height="15.0" fill="rgb(246,197,28)" rx="2" ry="2" />
<text  x="48.01" y="335.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast (2 samples, 0.22%)</title><rect x="166.9" y="357" width="2.6" height="15.0" fill="rgb(209,157,25)" rx="2" ry="2" />
<text  x="169.90" y="367.5" ></text>
</g>
<g >
<title>native_write_msr_safe (4 samples, 0.44%)</title><rect x="1184.8" y="181" width="5.2" height="15.0" fill="rgb(240,180,1)" rx="2" ry="2" />
<text  x="1187.81" y="191.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (4 samples, 0.44%)</title><rect x="1184.8" y="373" width="5.2" height="15.0" fill="rgb(226,187,14)" rx="2" ry="2" />
<text  x="1187.81" y="383.5" ></text>
</g>
<g >
<title>do_timer (25 samples, 2.75%)</title><rect x="73.5" y="309" width="32.5" height="15.0" fill="rgb(249,3,10)" rx="2" ry="2" />
<text  x="76.54" y="319.5" >do..</text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (88 samples, 9.67%)</title><rect x="288.8" y="373" width="114.1" height="15.0" fill="rgb(227,13,14)" rx="2" ry="2" />
<text  x="291.79" y="383.5" >generic_smp_ca..</text>
</g>
<g >
<title>__execve (1 samples, 0.11%)</title><rect x="1183.5" y="373" width="1.3" height="15.0" fill="rgb(216,194,7)" rx="2" ry="2" />
<text  x="1186.52" y="383.5" ></text>
</g>
<g >
<title>__do_softirq (76 samples, 8.35%)</title><rect x="174.7" y="325" width="98.5" height="15.0" fill="rgb(223,163,25)" rx="2" ry="2" />
<text  x="177.68" y="335.5" >__do_softirq</text>
</g>
<g >
<title>run_rebalance_domains (3 samples, 0.33%)</title><rect x="214.9" y="309" width="3.9" height="15.0" fill="rgb(224,100,41)" rx="2" ry="2" />
<text  x="217.88" y="319.5" ></text>
</g>
<g >
<title>kipmi0 (16 samples, 1.76%)</title><rect x="623.3" y="469" width="20.8" height="15.0" fill="rgb(223,222,6)" rx="2" ry="2" />
<text  x="626.34" y="479.5" ></text>
</g>
<g >
<title>perf_evlist__prepare_workload (1 samples, 0.11%)</title><rect x="1183.5" y="389" width="1.3" height="15.0" fill="rgb(227,207,28)" rx="2" ry="2" />
<text  x="1186.52" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (95 samples, 10.44%)</title><rect x="29.5" y="373" width="123.1" height="15.0" fill="rgb(243,57,32)" rx="2" ry="2" />
<text  x="32.45" y="383.5" >hrtimer_interrupt</text>
</g>
<g >
<title>ktime_get_real (5 samples, 0.55%)</title><rect x="589.6" y="405" width="6.5" height="15.0" fill="rgb(253,47,44)" rx="2" ry="2" />
<text  x="592.63" y="415.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.44%)</title><rect x="1184.8" y="309" width="5.2" height="15.0" fill="rgb(207,38,49)" rx="2" ry="2" />
<text  x="1187.81" y="319.5" ></text>
</g>
<g >
<title>hrtimer_run_pending (1 samples, 0.11%)</title><rect x="183.8" y="309" width="1.3" height="15.0" fill="rgb(228,79,1)" rx="2" ry="2" />
<text  x="186.76" y="319.5" ></text>
</g>
<g >
<title>child_rip (1 samples, 0.11%)</title><rect x="622.0" y="453" width="1.3" height="15.0" fill="rgb(222,41,10)" rx="2" ry="2" />
<text  x="625.04" y="463.5" ></text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.11%)</title><rect x="644.1" y="357" width="1.3" height="15.0" fill="rgb(239,68,3)" rx="2" ry="2" />
<text  x="647.09" y="367.5" ></text>
</g>
<g >
<title>sys_execve (1 samples, 0.11%)</title><rect x="1183.5" y="341" width="1.3" height="15.0" fill="rgb(218,161,22)" rx="2" ry="2" />
<text  x="1186.52" y="351.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.11%)</title><rect x="618.2" y="341" width="1.3" height="15.0" fill="rgb(205,48,17)" rx="2" ry="2" />
<text  x="621.15" y="351.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.11%)</title><rect x="224.0" y="165" width="1.3" height="15.0" fill="rgb(232,161,8)" rx="2" ry="2" />
<text  x="226.96" y="175.5" ></text>
</g>
<g >
<title>call_transmit (1 samples, 0.11%)</title><rect x="1183.5" y="85" width="1.3" height="15.0" fill="rgb(226,63,24)" rx="2" ry="2" />
<text  x="1186.52" y="95.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.11%)</title><rect x="56.7" y="293" width="1.3" height="15.0" fill="rgb(236,43,9)" rx="2" ry="2" />
<text  x="59.68" y="303.5" ></text>
</g>
<g >
<title>_spin_lock (1 samples, 0.11%)</title><rect x="28.2" y="373" width="1.3" height="15.0" fill="rgb(232,6,50)" rx="2" ry="2" />
<text  x="31.15" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_commit_txn (4 samples, 0.44%)</title><rect x="1184.8" y="261" width="5.2" height="15.0" fill="rgb(214,101,4)" rx="2" ry="2" />
<text  x="1187.81" y="271.5" ></text>
</g>
<g >
<title>start_kernel (4 samples, 0.44%)</title><rect x="1184.8" y="421" width="5.2" height="15.0" fill="rgb(244,105,19)" rx="2" ry="2" />
<text  x="1187.81" y="431.5" ></text>
</g>
<g >
<title>unx_marshal (1 samples, 0.11%)</title><rect x="1183.5" y="53" width="1.3" height="15.0" fill="rgb(211,25,24)" rx="2" ry="2" />
<text  x="1186.52" y="63.5" ></text>
</g>
<g >
<title>rcu_check_callbacks (4 samples, 0.44%)</title><rect x="108.5" y="309" width="5.2" height="15.0" fill="rgb(223,151,3)" rx="2" ry="2" />
<text  x="111.55" y="319.5" ></text>
</g>
<g >
<title>do_softirq (2 samples, 0.22%)</title><rect x="1173.1" y="389" width="2.6" height="15.0" fill="rgb(219,39,5)" rx="2" ry="2" />
<text  x="1176.14" y="399.5" ></text>
</g>
<g >
<title>irq_affinity_hint_proc_show (1 samples, 0.11%)</title><rect x="619.5" y="357" width="1.2" height="15.0" fill="rgb(234,68,16)" rx="2" ry="2" />
<text  x="622.45" y="367.5" ></text>
</g>
<g >
<title>stub_execve (1 samples, 0.11%)</title><rect x="1183.5" y="357" width="1.3" height="15.0" fill="rgb(224,202,3)" rx="2" ry="2" />
<text  x="1186.52" y="367.5" ></text>
</g>
<g >
<title>intel_pmu_nhm_enable_all (4 samples, 0.44%)</title><rect x="1178.3" y="149" width="5.2" height="15.0" fill="rgb(246,56,17)" rx="2" ry="2" />
<text  x="1181.33" y="159.5" ></text>
</g>
<g >
<title>run_local_timers (1 samples, 0.11%)</title><rect x="113.7" y="309" width="1.3" height="15.0" fill="rgb(225,63,6)" rx="2" ry="2" />
<text  x="116.74" y="319.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.11%)</title><rect x="620.7" y="325" width="1.3" height="15.0" fill="rgb(208,152,48)" rx="2" ry="2" />
<text  x="623.75" y="335.5" ></text>
</g>
<g >
<title>irq_enter (13 samples, 1.43%)</title><rect x="152.6" y="373" width="16.9" height="15.0" fill="rgb(247,81,48)" rx="2" ry="2" />
<text  x="155.64" y="383.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (22 samples, 2.42%)</title><rect x="186.4" y="309" width="28.5" height="15.0" fill="rgb(218,77,9)" rx="2" ry="2" />
<text  x="189.35" y="319.5" >rc..</text>
</g>
<g >
<title>enqueue_task (1 samples, 0.11%)</title><rect x="224.0" y="149" width="1.3" height="15.0" fill="rgb(208,61,23)" rx="2" ry="2" />
<text  x="226.96" y="159.5" ></text>
</g>
<g >
<title>vfs_ioctl (5 samples, 0.55%)</title><rect x="1177.0" y="325" width="6.5" height="15.0" fill="rgb(216,170,38)" rx="2" ry="2" />
<text  x="1180.03" y="335.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (4 samples, 0.44%)</title><rect x="1184.8" y="453" width="5.2" height="15.0" fill="rgb(223,50,51)" rx="2" ry="2" />
<text  x="1187.81" y="463.5" ></text>
</g>
<g >
<title>rcu_check_callbacks (2 samples, 0.22%)</title><rect x="64.5" y="325" width="2.6" height="15.0" fill="rgb(240,159,9)" rx="2" ry="2" />
<text  x="67.46" y="335.5" ></text>
</g>
<g >
<title>call_softirq (2 samples, 0.22%)</title><rect x="1173.1" y="373" width="2.6" height="15.0" fill="rgb(238,1,42)" rx="2" ry="2" />
<text  x="1176.14" y="383.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.11%)</title><rect x="284.9" y="341" width="1.3" height="15.0" fill="rgb(245,51,13)" rx="2" ry="2" />
<text  x="287.90" y="351.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.22%)</title><rect x="1173.1" y="405" width="2.6" height="15.0" fill="rgb(219,216,15)" rx="2" ry="2" />
<text  x="1176.14" y="415.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.11%)</title><rect x="224.0" y="197" width="1.3" height="15.0" fill="rgb(211,63,37)" rx="2" ry="2" />
<text  x="226.96" y="207.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.11%)</title><rect x="618.2" y="373" width="1.3" height="15.0" fill="rgb(205,37,0)" rx="2" ry="2" />
<text  x="621.15" y="383.5" ></text>
</g>
<g >
<title>perf (7 samples, 0.77%)</title><rect x="1175.7" y="469" width="9.1" height="15.0" fill="rgb(213,184,45)" rx="2" ry="2" />
<text  x="1178.74" y="479.5" ></text>
</g>
<g >
<title>_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="201.9" y="261" width="1.3" height="15.0" fill="rgb(250,111,25)" rx="2" ry="2" />
<text  x="204.91" y="271.5" ></text>
</g>
<g >
<title>group_sched_in (4 samples, 0.44%)</title><rect x="1178.3" y="213" width="5.2" height="15.0" fill="rgb(219,21,42)" rx="2" ry="2" />
<text  x="1181.33" y="223.5" ></text>
</g>
<g >
<title>smi_event_handler (15 samples, 1.65%)</title><rect x="624.6" y="405" width="19.5" height="15.0" fill="rgb(236,128,22)" rx="2" ry="2" />
<text  x="627.64" y="415.5" ></text>
</g>
<g >
<title>refresh_cpu_vm_stats (1 samples, 0.11%)</title><rect x="12.6" y="389" width="1.3" height="15.0" fill="rgb(220,223,16)" rx="2" ry="2" />
<text  x="15.59" y="399.5" ></text>
</g>
<g >
<title>force_quiescent_state (2 samples, 0.22%)</title><rect x="203.2" y="277" width="2.6" height="15.0" fill="rgb(249,117,33)" rx="2" ry="2" />
<text  x="206.21" y="287.5" ></text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.11%)</title><rect x="622.0" y="389" width="1.3" height="15.0" fill="rgb(207,203,5)" rx="2" ry="2" />
<text  x="625.04" y="399.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.11%)</title><rect x="271.9" y="245" width="1.3" height="15.0" fill="rgb(209,72,13)" rx="2" ry="2" />
<text  x="274.93" y="255.5" ></text>
</g>
<g >
<title>getnstimeofday (1 samples, 0.11%)</title><rect x="583.1" y="389" width="1.3" height="15.0" fill="rgb(220,8,39)" rx="2" ry="2" />
<text  x="586.14" y="399.5" ></text>
</g>
<g >
<title>sched_clock_tick (1 samples, 0.11%)</title><rect x="164.3" y="325" width="1.3" height="15.0" fill="rgb(222,12,2)" rx="2" ry="2" />
<text  x="167.31" y="335.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.22%)</title><rect x="144.9" y="277" width="2.6" height="15.0" fill="rgb(212,167,45)" rx="2" ry="2" />
<text  x="147.86" y="287.5" ></text>
</g>
<g >
<title>profile_tick (1 samples, 0.11%)</title><rect x="63.2" y="325" width="1.3" height="15.0" fill="rgb(228,7,15)" rx="2" ry="2" />
<text  x="66.16" y="335.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.11%)</title><rect x="224.0" y="277" width="1.3" height="15.0" fill="rgb(243,150,49)" rx="2" ry="2" />
<text  x="226.96" y="287.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (1 samples, 0.11%)</title><rect x="138.4" y="245" width="1.3" height="15.0" fill="rgb(212,57,15)" rx="2" ry="2" />
<text  x="141.37" y="255.5" ></text>
</g>
<g >
<title>alloc_cpumask_var (1 samples, 0.11%)</title><rect x="619.5" y="341" width="1.2" height="15.0" fill="rgb(221,105,12)" rx="2" ry="2" />
<text  x="622.45" y="351.5" ></text>
</g>
<g >
<title>_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="1174.4" y="309" width="1.3" height="15.0" fill="rgb(247,126,37)" rx="2" ry="2" />
<text  x="1177.44" y="319.5" ></text>
</g>
<g >
<title>place_entity (1 samples, 0.11%)</title><rect x="224.0" y="101" width="1.3" height="15.0" fill="rgb(238,81,47)" rx="2" ry="2" />
<text  x="226.96" y="111.5" ></text>
</g>
<g >
<title>thread_return (1 samples, 0.11%)</title><rect x="10.0" y="405" width="1.3" height="15.0" fill="rgb(253,152,1)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.11%)</title><rect x="645.4" y="357" width="1.3" height="15.0" fill="rgb(249,43,48)" rx="2" ry="2" />
<text  x="648.38" y="367.5" ></text>
</g>
<g >
<title>_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="227.8" y="261" width="1.3" height="15.0" fill="rgb(222,107,47)" rx="2" ry="2" />
<text  x="230.85" y="271.5" ></text>
</g>
<g >
<title>pm_qos_requirement (1 samples, 0.11%)</title><rect x="609.1" y="405" width="1.3" height="15.0" fill="rgb(249,58,41)" rx="2" ry="2" />
<text  x="612.08" y="415.5" ></text>
</g>
<g >
<title>swapper (4 samples, 0.44%)</title><rect x="1184.8" y="469" width="5.2" height="15.0" fill="rgb(245,48,42)" rx="2" ry="2" />
<text  x="1187.81" y="479.5" ></text>
</g>
<g >
<title>intel_pmu_nhm_enable_all (88 samples, 9.67%)</title><rect x="288.8" y="261" width="114.1" height="15.0" fill="rgb(243,201,6)" rx="2" ry="2" />
<text  x="291.79" y="271.5" >intel_pmu_nhm_..</text>
</g>
<g >
<title>__rpc_execute (1 samples, 0.11%)</title><rect x="1183.5" y="101" width="1.3" height="15.0" fill="rgb(229,171,42)" rx="2" ry="2" />
<text  x="1186.52" y="111.5" ></text>
</g>
<g >
<title>tick_nohz_restart_sched_tick (1 samples, 0.11%)</title><rect x="613.0" y="421" width="1.3" height="15.0" fill="rgb(244,88,8)" rx="2" ry="2" />
<text  x="615.97" y="431.5" ></text>
</g>
<g >
<title>kcs_event (15 samples, 1.65%)</title><rect x="624.6" y="389" width="19.5" height="15.0" fill="rgb(233,193,42)" rx="2" ry="2" />
<text  x="627.64" y="399.5" ></text>
</g>
<g >
<title>port_outb (1 samples, 0.11%)</title><rect x="642.8" y="373" width="1.3" height="15.0" fill="rgb(223,114,9)" rx="2" ry="2" />
<text  x="645.79" y="383.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.11%)</title><rect x="56.7" y="245" width="1.3" height="15.0" fill="rgb(243,120,24)" rx="2" ry="2" />
<text  x="59.68" y="255.5" ></text>
</g>
<g >
<title>find_next_bit (2 samples, 0.22%)</title><rect x="216.2" y="245" width="2.6" height="15.0" fill="rgb(213,83,20)" rx="2" ry="2" />
<text  x="219.18" y="255.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.11%)</title><rect x="56.7" y="277" width="1.3" height="15.0" fill="rgb(241,77,1)" rx="2" ry="2" />
<text  x="59.68" y="287.5" ></text>
</g>
<g >
<title>seq_printf (1 samples, 0.11%)</title><rect x="620.7" y="341" width="1.3" height="15.0" fill="rgb(211,152,17)" rx="2" ry="2" />
<text  x="623.75" y="351.5" ></text>
</g>
<g >
<title>do_lookup (1 samples, 0.11%)</title><rect x="1183.5" y="229" width="1.3" height="15.0" fill="rgb(214,195,49)" rx="2" ry="2" />
<text  x="1186.52" y="239.5" ></text>
</g>
<g >
<title>tick_nohz_stop_idle (4 samples, 0.44%)</title><rect x="161.7" y="341" width="5.2" height="15.0" fill="rgb(231,216,41)" rx="2" ry="2" />
<text  x="164.71" y="351.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (1 samples, 0.11%)</title><rect x="1175.7" y="293" width="1.3" height="15.0" fill="rgb(252,99,51)" rx="2" ry="2" />
<text  x="1178.74" y="303.5" ></text>
</g>
<g >
<title>ktime_get_real (3 samples, 0.33%)</title><rect x="584.4" y="389" width="3.9" height="15.0" fill="rgb(226,163,21)" rx="2" ry="2" />
<text  x="587.44" y="399.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.11%)</title><rect x="10.0" y="437" width="1.3" height="15.0" fill="rgb(222,220,17)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>__dequeue_entity (1 samples, 0.11%)</title><rect x="623.3" y="357" width="1.3" height="15.0" fill="rgb(211,54,5)" rx="2" ry="2" />
<text  x="626.34" y="367.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.11%)</title><rect x="12.6" y="421" width="1.3" height="15.0" fill="rgb(224,206,17)" rx="2" ry="2" />
<text  x="15.59" y="431.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (202 samples, 22.20%)</title><rect x="26.9" y="389" width="261.9" height="15.0" fill="rgb(209,224,9)" rx="2" ry="2" />
<text  x="29.86" y="399.5" >smp_apic_timer_interrupt</text>
</g>
<g >
<title>kthread (1 samples, 0.11%)</title><rect x="622.0" y="437" width="1.3" height="15.0" fill="rgb(236,228,1)" rx="2" ry="2" />
<text  x="625.04" y="447.5" ></text>
</g>
<g >
<title>__run_hrtimer (82 samples, 9.01%)</title><rect x="41.1" y="357" width="106.4" height="15.0" fill="rgb(219,156,7)" rx="2" ry="2" />
<text  x="44.12" y="367.5" >__run_hrtimer</text>
</g>
<g >
<title>__local_bh_enable (2 samples, 0.22%)</title><rect x="181.2" y="309" width="2.6" height="15.0" fill="rgb(250,52,53)" rx="2" ry="2" />
<text  x="184.16" y="319.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.11%)</title><rect x="270.6" y="277" width="1.3" height="15.0" fill="rgb(233,171,49)" rx="2" ry="2" />
<text  x="273.64" y="287.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.11%)</title><rect x="56.7" y="341" width="1.3" height="15.0" fill="rgb(239,6,10)" rx="2" ry="2" />
<text  x="59.68" y="351.5" ></text>
</g>
<g >
<title>ns_to_timeval (1 samples, 0.11%)</title><rect x="588.3" y="389" width="1.3" height="15.0" fill="rgb(237,211,27)" rx="2" ry="2" />
<text  x="591.33" y="399.5" ></text>
</g>
<g >
<title>anon_vma_free (1 samples, 0.11%)</title><rect x="1175.7" y="277" width="1.3" height="15.0" fill="rgb(207,149,21)" rx="2" ry="2" />
<text  x="1178.74" y="287.5" ></text>
</g>
<g >
<title>rcu_process_gp_end (1 samples, 0.11%)</title><rect x="213.6" y="293" width="1.3" height="15.0" fill="rgb(236,182,21)" rx="2" ry="2" />
<text  x="216.58" y="303.5" ></text>
</g>
<g >
<title>child_rip (1 samples, 0.11%)</title><rect x="10.0" y="453" width="1.3" height="15.0" fill="rgb(224,83,46)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.11%)</title><rect x="271.9" y="213" width="1.3" height="15.0" fill="rgb(240,135,12)" rx="2" ry="2" />
<text  x="274.93" y="223.5" ></text>
</g>
<g >
<title>intel_idle (144 samples, 15.82%)</title><rect x="402.9" y="405" width="186.7" height="15.0" fill="rgb(238,170,49)" rx="2" ry="2" />
<text  x="405.90" y="415.5" >intel_idle</text>
</g>
<g >
<title>mx_linux_kwindow_timer (1 samples, 0.11%)</title><rect x="185.1" y="309" width="1.3" height="15.0" fill="rgb(224,175,16)" rx="2" ry="2" />
<text  x="188.05" y="319.5" ></text>
</g>
<g >
<title>system_call_fastpath (5 samples, 0.55%)</title><rect x="1177.0" y="373" width="6.5" height="15.0" fill="rgb(223,163,25)" rx="2" ry="2" />
<text  x="1180.03" y="383.5" ></text>
</g>
<g >
<title>perf_event_enable (5 samples, 0.55%)</title><rect x="1177.0" y="277" width="6.5" height="15.0" fill="rgb(229,101,37)" rx="2" ry="2" />
<text  x="1180.03" y="287.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.11%)</title><rect x="1175.7" y="325" width="1.3" height="15.0" fill="rgb(227,174,3)" rx="2" ry="2" />
<text  x="1178.74" y="335.5" ></text>
</g>
<g >
<title>update_vsyscall (1 samples, 0.11%)</title><rect x="74.8" y="293" width="1.3" height="15.0" fill="rgb(228,173,18)" rx="2" ry="2" />
<text  x="77.84" y="303.5" ></text>
</g>
<g >
<title>system_call_fastpath (3 samples, 0.33%)</title><rect x="618.2" y="437" width="3.8" height="15.0" fill="rgb(207,28,49)" rx="2" ry="2" />
<text  x="621.15" y="447.5" ></text>
</g>
<g >
<title>intel_pmu_nhm_enable_all (4 samples, 0.44%)</title><rect x="1184.8" y="213" width="5.2" height="15.0" fill="rgb(212,191,12)" rx="2" ry="2" />
<text  x="1187.81" y="223.5" ></text>
</g>
<g >
<title>perf_event_task_tick (7 samples, 0.77%)</title><rect x="131.9" y="293" width="9.1" height="15.0" fill="rgb(254,52,50)" rx="2" ry="2" />
<text  x="134.89" y="303.5" ></text>
</g>
<g >
<title>native_write_msr_safe (1 samples, 0.11%)</title><rect x="139.7" y="245" width="1.3" height="15.0" fill="rgb(231,164,24)" rx="2" ry="2" />
<text  x="142.67" y="255.5" ></text>
</g>
<g >
<title>cpu_idle (4 samples, 0.44%)</title><rect x="1184.8" y="389" width="5.2" height="15.0" fill="rgb(210,57,49)" rx="2" ry="2" />
<text  x="1187.81" y="399.5" ></text>
</g>
<g >
<title>sys_execve (1 samples, 0.11%)</title><rect x="1175.7" y="421" width="1.3" height="15.0" fill="rgb(232,63,42)" rx="2" ry="2" />
<text  x="1178.74" y="431.5" ></text>
</g>
<g >
<title>find_next_bit (3 samples, 0.33%)</title><rect x="234.3" y="245" width="3.9" height="15.0" fill="rgb(216,21,48)" rx="2" ry="2" />
<text  x="237.33" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.11%)</title><rect x="25.6" y="389" width="1.3" height="15.0" fill="rgb(221,78,54)" rx="2" ry="2" />
<text  x="28.56" y="399.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.11%)</title><rect x="151.3" y="325" width="1.3" height="15.0" fill="rgb(248,190,47)" rx="2" ry="2" />
<text  x="154.34" y="335.5" ></text>
</g>
<g >
<title>cmd_record (6 samples, 0.66%)</title><rect x="1177.0" y="405" width="7.8" height="15.0" fill="rgb(249,17,21)" rx="2" ry="2" />
<text  x="1180.03" y="415.5" ></text>
</g>
<g >
<title>rpc_call_sync (1 samples, 0.11%)</title><rect x="1183.5" y="149" width="1.3" height="15.0" fill="rgb(205,4,23)" rx="2" ry="2" />
<text  x="1186.52" y="159.5" ></text>
</g>
<g >
<title>nfs3_rpc_wrapper.clone.0 (1 samples, 0.11%)</title><rect x="1183.5" y="165" width="1.3" height="15.0" fill="rgb(227,8,29)" rx="2" ry="2" />
<text  x="1186.52" y="175.5" ></text>
</g>
<g >
<title>thread_return (1 samples, 0.11%)</title><rect x="622.0" y="373" width="1.3" height="15.0" fill="rgb(225,165,50)" rx="2" ry="2" />
<text  x="625.04" y="383.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.11%)</title><rect x="56.7" y="309" width="1.3" height="15.0" fill="rgb(251,169,36)" rx="2" ry="2" />
<text  x="59.68" y="319.5" ></text>
</g>
<g >
<title>mod_timer (31 samples, 3.41%)</title><rect x="230.4" y="261" width="40.2" height="15.0" fill="rgb(233,48,48)" rx="2" ry="2" />
<text  x="233.44" y="271.5" >mod..</text>
</g>
<g >
<title>__phys_addr (1 samples, 0.11%)</title><rect x="1175.7" y="245" width="1.3" height="15.0" fill="rgb(227,26,30)" rx="2" ry="2" />
<text  x="1178.74" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (22 samples, 2.42%)</title><rect x="118.9" y="309" width="28.6" height="15.0" fill="rgb(206,206,49)" rx="2" ry="2" />
<text  x="121.92" y="319.5" >sc..</text>
</g>
<g >
<title>group_sched_in (4 samples, 0.44%)</title><rect x="1184.8" y="277" width="5.2" height="15.0" fill="rgb(221,93,28)" rx="2" ry="2" />
<text  x="1187.81" y="287.5" ></text>
</g>
<g >
<title>ipmi_thread (16 samples, 1.76%)</title><rect x="623.3" y="421" width="20.8" height="15.0" fill="rgb(236,47,13)" rx="2" ry="2" />
<text  x="626.34" y="431.5" ></text>
</g>
<g >
<title>_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="269.3" y="229" width="1.3" height="15.0" fill="rgb(240,72,9)" rx="2" ry="2" />
<text  x="272.34" y="239.5" ></text>
</g>
<g >
<title>irq_exit (92 samples, 10.11%)</title><rect x="169.5" y="373" width="119.3" height="15.0" fill="rgb(250,83,17)" rx="2" ry="2" />
<text  x="172.49" y="383.5" >irq_exit</text>
</g>
<g >
<title>__do_softirq (2 samples, 0.22%)</title><rect x="1173.1" y="357" width="2.6" height="15.0" fill="rgb(237,136,11)" rx="2" ry="2" />
<text  x="1176.14" y="367.5" ></text>
</g>
<g >
<title>native_write_msr_safe (86 samples, 9.45%)</title><rect x="291.4" y="229" width="111.5" height="15.0" fill="rgb(219,176,17)" rx="2" ry="2" />
<text  x="294.38" y="239.5" >native_write_..</text>
</g>
<g >
<title>nfs_lookup_revalidate (1 samples, 0.11%)</title><rect x="1183.5" y="213" width="1.3" height="15.0" fill="rgb(222,112,28)" rx="2" ry="2" />
<text  x="1186.52" y="223.5" ></text>
</g>
<g >
<title>events/1 (1 samples, 0.11%)</title><rect x="10.0" y="469" width="1.3" height="15.0" fill="rgb(216,78,46)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.11%)</title><rect x="271.9" y="229" width="1.3" height="15.0" fill="rgb(234,211,20)" rx="2" ry="2" />
<text  x="274.93" y="239.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1 samples, 0.11%)</title><rect x="616.9" y="437" width="1.3" height="15.0" fill="rgb(244,162,33)" rx="2" ry="2" />
<text  x="619.86" y="447.5" ></text>
</g>
<g >
<title>tick_dev_program_event (2 samples, 0.22%)</title><rect x="150.0" y="341" width="2.6" height="15.0" fill="rgb(248,222,49)" rx="2" ry="2" />
<text  x="153.04" y="351.5" ></text>
</g>
<g >
<title>kthread (16 samples, 1.76%)</title><rect x="623.3" y="437" width="20.8" height="15.0" fill="rgb(216,33,47)" rx="2" ry="2" />
<text  x="626.34" y="447.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (5 samples, 0.55%)</title><rect x="1177.0" y="293" width="6.5" height="15.0" fill="rgb(216,180,17)" rx="2" ry="2" />
<text  x="1180.03" y="303.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.44%)</title><rect x="1184.8" y="197" width="5.2" height="15.0" fill="rgb(230,200,39)" rx="2" ry="2" />
<text  x="1187.81" y="207.5" ></text>
</g>
<g >
<title>profile_tick (1 samples, 0.11%)</title><rect x="1171.8" y="373" width="1.3" height="15.0" fill="rgb(224,98,22)" rx="2" ry="2" />
<text  x="1174.85" y="383.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.33%)</title><rect x="1171.8" y="421" width="3.9" height="15.0" fill="rgb(224,116,12)" rx="2" ry="2" />
<text  x="1174.85" y="431.5" ></text>
</g>
<g >
<title>mx_watchdog (1 samples, 0.11%)</title><rect x="648.0" y="469" width="1.3" height="15.0" fill="rgb(235,20,4)" rx="2" ry="2" />
<text  x="650.98" y="479.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (1 samples, 0.11%)</title><rect x="613.0" y="389" width="1.3" height="15.0" fill="rgb(226,122,3)" rx="2" ry="2" />
<text  x="615.97" y="399.5" ></text>
</g>
<g >
<title>thread_return (1 samples, 0.11%)</title><rect x="648.0" y="405" width="1.3" height="15.0" fill="rgb(245,81,46)" rx="2" ry="2" />
<text  x="650.98" y="415.5" ></text>
</g>
<g >
<title>cache_reap (1 samples, 0.11%)</title><rect x="11.3" y="405" width="1.3" height="15.0" fill="rgb(230,91,54)" rx="2" ry="2" />
<text  x="14.30" y="415.5" ></text>
</g>
<g >
<title>__GI___ioctl (5 samples, 0.55%)</title><rect x="1177.0" y="389" width="6.5" height="15.0" fill="rgb(217,208,37)" rx="2" ry="2" />
<text  x="1180.03" y="399.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.11%)</title><rect x="1175.7" y="341" width="1.3" height="15.0" fill="rgb(251,21,21)" rx="2" ry="2" />
<text  x="1178.74" y="351.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (4 samples, 0.44%)</title><rect x="1184.8" y="437" width="5.2" height="15.0" fill="rgb(231,163,33)" rx="2" ry="2" />
<text  x="1187.81" y="447.5" ></text>
</g>
<g >
<title>__nfs_revalidate_inode (1 samples, 0.11%)</title><rect x="1183.5" y="197" width="1.3" height="15.0" fill="rgb(231,138,38)" rx="2" ry="2" />
<text  x="1186.52" y="207.5" ></text>
</g>
<g >
<title>child_rip (1 samples, 0.11%)</title><rect x="645.4" y="453" width="1.3" height="15.0" fill="rgb(220,54,37)" rx="2" ry="2" />
<text  x="648.38" y="463.5" ></text>
</g>
</g>
</svg>
